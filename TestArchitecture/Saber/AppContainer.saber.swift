// Generated by Saber 0.2.1

// swiftlint:disable all

import Foundation

internal class AppContainer: AppContaining {

    private var cached_connectionGatewayProvider: ConnectionGatewayProvider?

    internal init() {
    }

    internal var homePresenter: HomePresenter {
        let homePresenter = self.makeHomePresenter()
        return homePresenter
    }

    internal var homeController: HomeController {
        let homeController = self.makeHomeController()
        return homeController
    }

    internal var networkDataGateway: NetworkDataGateway {
        let networkDataGateway = self.makeNetworkDataGateway()
        return networkDataGateway
    }

    internal var homeViewData: HomeViewData {
        let homeViewData = self.makeHomeViewData()
        return homeViewData
    }

    internal var connectionGatewayProvider: ConnectionGatewayProvider {
        if let cached = self.cached_connectionGatewayProvider { return cached }
        let connectionGatewayProvider = self.makeConnectionGatewayProvider()
        self.cached_connectionGatewayProvider = connectionGatewayProvider
        return connectionGatewayProvider
    }

    internal var dummyDataGateway: DummyDataGateway {
        let dummyDataGateway = self.makeDummyDataGateway()
        return dummyDataGateway
    }

    internal var dataGatewayProvder: DataGatewayProvder {
        let dataGatewayProvder = self.makeDataGatewayProvder()
        return dataGatewayProvder
    }

    internal var dummyConnectionGateway: DummyConnectionGateway {
        let dummyConnectionGateway = self.makeDummyConnectionGateway()
        return dummyConnectionGateway
    }

    internal var homeInteractor: HomeInteractor {
        let homeInteractor = self.makeHomeInteractor()
        return homeInteractor
    }

    internal var dataGateway: DataGateway {
        let dataGateway = self.makeDataGateway()
        return dataGateway
    }

    internal var connectionGateway: ConnectionGateway {
        let connectionGateway = self.makeConnectionGateway()
        return connectionGateway
    }

    private func makeHomePresenter() -> HomePresenter {
        return HomePresenter(viewData: self.homeViewData)
    }

    private func makeHomeController() -> HomeController {
        return HomeController(homeInteractor: self.homeInteractor, presenter: self.homePresenter)
    }

    private func makeNetworkDataGateway() -> NetworkDataGateway {
        return NetworkDataGateway()
    }

    private func makeHomeViewData() -> HomeViewData {
        return HomeViewData()
    }

    private func makeConnectionGatewayProvider() -> ConnectionGatewayProvider {
        return ConnectionGatewayProvider(gateway: self.dummyConnectionGateway)
    }

    private func makeDummyDataGateway() -> DummyDataGateway {
        return DummyDataGateway()
    }

    private func makeDataGatewayProvder() -> DataGatewayProvder {
        return DataGatewayProvder(gateway: self.dummyDataGateway)
    }

    private func makeDummyConnectionGateway() -> DummyConnectionGateway {
        return DummyConnectionGateway()
    }

    private func makeHomeInteractor() -> HomeInteractor {
        return HomeInteractor(dataGateway: self.dataGateway, connectionGateway: self.connectionGateway)
    }

    private func makeDataGateway() -> DataGateway {
        let provider = self.dataGatewayProvder
        return provider.provides()
    }

    private func makeConnectionGateway() -> ConnectionGateway {
        let provider = self.connectionGatewayProvider
        return provider.provides()
    }

    internal func injectTo(homeViewController: HomeViewController) {
        homeViewController.controller = self.homeController
    }

}